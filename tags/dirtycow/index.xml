<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dirtycow on solc0nf</title>
    <link>https://solc0nf.github.io/tags/dirtycow/index.html</link>
    <description>Recent content in dirtycow on solc0nf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Mar 2023 08:19:38 +0400</lastBuildDate><atom:link href="https://solc0nf.github.io/tags/dirtycow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Dirtycow Exploit</title>
      <link>https://solc0nf.github.io/exploit-articles/the-dirtycow-exploit/index.html</link>
      <pubDate>Mon, 06 Mar 2023 08:19:38 +0400</pubDate>
      <guid>https://solc0nf.github.io/exploit-articles/the-dirtycow-exploit/index.html</guid>
      <description>DirtyCOW (CVE-2016-5195) The DirtyCOW is a vulnerability in the Linux kernel which allowed processes, write access to read only memory mappings. This vulnerability was discovered by Phil Oester.
The vulnerability is called DirtyCOW because the issue is caused by a race condition 1 in the way the kernel handles copy-on-write (COW) COW is an optimization strategy used by operating systems. When multiple processes ask for resources, the system can give them pointers to the same resource.</description>
    </item>
  </channel>
</rss>